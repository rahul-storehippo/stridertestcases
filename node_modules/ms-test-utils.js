/**
 * Created with JetBrains WebStorm.
 * User: atishay
 * Date: 2/7/15
 * Time: 5:31 PM
 * To change this template use File | Settings | File Templates.
 */
var fs = require('fs');
var path = require('path');

var utils = function () {
    this.cleanup = function (sdk, entity, next) {
        var deleteB = function (record, next) {
            var request = {
                entity: entity,
                recordId: record._id
            };
            sdk.del(request, function (error, response) {
                if (error) {
                    console.log("Error in cleaning up")
                }
                else {
                    next();
                }
            });
        };
        var del = function (records, next) {
            if (records.length == 0) {
                return next();
            }
            var record = records.shift();
            deleteB(record, function () {
                del(records, next)
            });
        };
        var request = {
            entity: entity
        };
        sdk.list(request, function (error, response) {
            if (error) {
                console.log('Error in cleaning up')
            }
            else {
                var data = JSON.parse(response.data);
                del(data.records, function () {
                    next();
                });
            }
        });

    }
    this.addItems = function (sdk, entity, items, next) {
        var adding = function (record, next) {
            var request = {
                entity: entity,
                data: record
            }
            sdk.add(request, function (err, res) {
                if (err) {
                    console.log('Error adding items');
                }
                else {
                    next();
                }
            })

        }
        var add = function (items, next) {
            if (!items.length) {
                return next();
            }
            var record = items.shift();
            adding(record, function () {
                add(items, next)
            })
        }
        add(items, function () {
            next();
        })
    }

    this.get = function (filePath, next) {
        fs.readFile(filePath, 'utf-8', function (err, data) {
            if (err) return next(err, null);
            data = JSON.parse(data);
            next(null, data);
        });
    };





}

module.exports = new utils;